---

- hosts: rpi-dooku

  vars:

    cloudflare_command_stub: "--dns-cloudflare --dns-cloudflare-credentials .cloudflare_dns"
    key_type: ecdsa

    certbot_auto_renew: true
    certbot_create_if_missing: true
    certbot_auto_renew_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
    certbot_auto_renew_hour: "3"
    certbot_auto_renew_minute: "30"
    certbot_auto_renew_options: "--quiet --no-self-upgrade {{ cloudflare_command_stub }}"
    certbot_install_method: snap
    certbot_admin_email: "0x620x64@protonmail.com"
    certbot_create_method: standalone
    certbot_create_command: "{{ certbot_script }} certonly --noninteractive --agree-tos --email {{ cert_item.email | default(certbot_admin_email) }} {{ cloudflare_command_stub }} --key-type {{ key_type }}  -d {{ cert_item.domains | join(',') }}"

    certbot_certs:
      - domains:
        - dooku.bendavies.space
      - domains:
        - kenobi.bendavies.space
      - domains:
        - pihole.bendavies.space
      - domains:
        - unifi.bendavies.space
      - domains:
        - vader.bendavies.space

    installed_cert_base: /etc/letsencrypt/live

    installed_certs:

      - name: dooku.bendavies.space
        target_dir: /etc/httpd/ssl
        target_service: httpd
        target_host: rpi-dooku

      - name: kenobi.bendavies.space
        target_dir: /etc/httpd/ssl
        target_service: httpd
        target_host: rpi-kenobi

      - name: pihole.bendavies.space
        target_dir: /etc/lighttpd/.ssl
        target_service: lighttpd
        target_host: st2rspdns0001p0

      - name: unifi.bendavies.space
        target_dir: /data/unifi-core/config
        target_service: unifi-core
        target_host: unifi.bendavies.space

      - name: vader.bendavies.space
        target_dir: /etc/httpd/ssl
        target_service: httpd
        target_host: rpi_vader


  roles:

    - { role: geerlingguy.certbot, become: yes }


  tasks:

    - name: Copy cert file to remote
      copy:
        src: "{{ installed_cert_base }}/{{ item.name }}/fullchain.pem.new"
        dest: "{{ item.target_dir }}"
        mode: pull
      become: true
      delegate_to: "{{ item.target_host }}"
      loop: "{{ installed_certs }}"

